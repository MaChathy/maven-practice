<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD// Mapper 3.0 //EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--mapper是根标签，namespace属性：在MyBatis全局范围内找到一个具体的Mapper配置-->
<!-- 引入接口后，为了方便通过接口全类名来找到Mapper配置文件，所以通常将namespace属性设置为接口全类名 -->
<mapper namespace="com.fisher.mybatis.dao.EmployeeMapper">
    <!-- 编写具体的SQL语句，使用id属性唯一的标记一条SQL语句 -->
    <!-- resultType属性：指定封装查询结果的Java实体类的全类名 -->
    <select id="selectEmployee" resultType="com.fisher.mybatis.baseoperate.entity.Employees">
        <!-- Mybatis负责把SQL语句中的#{}部分替换成“?”占位符，在#{}内部还是要声明一个见名知意的名称 -->
        select emp_id empId,emp_name empName,emp_salary empSalary from t_emp where emp_id=#{empId}
    </select>
    <!--插入员工信息-->
    <insert id="insertEmployee" >
        <!--当前场景：#{} 中必须是实体类对象的属性名-->
        <!-- 因为 Mybatis 需要根据 #{} 中提供的属性名到实体类中获取属性值 -->
        insert into t_emp(emp_name,emp_salary) values (#{empName},#{empSalary})
    </insert>
    <!--修改员工信息-->
    <update id="updateEmployee">
        update t_emp set emp_name=#{empName} where emp_id=#{empId}
    </update>
    <!--删除员工信息-->
    <delete id="deleteEmployee">
        delete t_emp where emp_id=#{empId}
    </delete>
</mapper>